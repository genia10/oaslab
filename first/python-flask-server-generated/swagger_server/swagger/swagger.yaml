openapi: 3.0.3
info:
  title: Хранение книг
  description: API для хранения книг
  version: 1.0.0
servers:
- url: https://example.com/api
paths:
  /books:
    get:
      summary: Получить список книг
      operationId: books_get
      responses:
        "200":
          description: Успешный запрос
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'
                x-content-type: application/json
      x-openapi-router-controller: swagger_server.controllers.default_controller
    post:
      summary: Добавить новую книгу
      operationId: books_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
        required: true
      responses:
        "200":
          description: Успешно создано
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
        "400":
          description: Некорректный ввод
      x-openapi-router-controller: swagger_server.controllers.default_controller
  /books/{bookId}:
    get:
      summary: Получить информацию о книге
      operationId: books_book_id_get
      parameters:
      - name: bookId
        in: path
        description: Идентификатор книги
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Успешный запрос
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
        "404":
          description: Книга не найдена
      x-openapi-router-controller: swagger_server.controllers.default_controller
    put:
      summary: Обновить информацию о книге
      operationId: books_book_id_put
      parameters:
      - name: bookId
        in: path
        description: Идентификатор книги
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
        required: true
      responses:
        "200":
          description: Успешно обновлено
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
        "400":
          description: Неверный ID
        "404":
          description: Книга не найдена
      x-openapi-router-controller: swagger_server.controllers.default_controller
    delete:
      summary: Удалить книгу
      operationId: books_book_id_delete
      parameters:
      - name: bookId
        in: path
        description: Идентификатор книги
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Книга удалена успешно
      x-openapi-router-controller: swagger_server.controllers.default_controller
  /books/search:
    get:
      summary: Поиск книг по различным критериям
      operationId: books_search_get
      parameters:
      - name: author
        in: query
        description: Автор книги
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: genre
        in: query
        description: Жанр книги
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: title
        in: query
        description: Название книги
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Успешный запрос
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'
                x-content-type: application/json
      x-openapi-router-controller: swagger_server.controllers.default_controller
components:
  schemas:
    Book:
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        author:
          type: string
        genre:
          type: string
      example:
        author: author
        genre: genre
        id: 0
        title: title

